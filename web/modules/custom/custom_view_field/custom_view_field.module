<?php

use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;

// /**
//  * Implements hook_views_data_alter().
//  */
// function custom_view_field_views_data_alter(array &$data) {
//     // dump($data);
//     // exit;
//   // Alter views data here based on your requirements.
//   // For example, you can add custom fields, filters, relationships, etc.
// }

/**
 * @file
 * The module file.
 */

/**
 * Implements hook_views_data().
 */
function custom_view_field_views_data() {
  // dump('samlet');
  $data['views']['table']['group'] = t('Custom Global');
  $data['views']['table']['join'] = [
    // #global is a special flag which allows a table to appear all the time.
    '#global' => [],
  ];
  
  $data['views']['current_user_role_field'] = [
    'title' => t('Current User Role'),
    'help' => t('Provoide the Current user role.'),
    'field' => [
        'id' => 'current_user_role_field',
    ],
  ];

  $data['views']['start_and_end_date'] = [
    'title' => t('Start and End date - Custom Filter'),
    'filter' => [
      'title' => t('Start and End date - Custom Filter'),
      'field' => 'current_user_role_field',
      'id' => 'start_and_end_date',
    ],
  ];

  return $data;
}

function custom_view_field_views_pre_view(&$view, &$display_id, &$args){
  // dump($view);
  // dump($view->id());
  if($view->id() == 'my_articles'){
    // dump($view->storage->getDisplay('default'));
    $display = $view->storage->getDisplay('default');
    // dump($display['display_options']['filters']['title']['operator']); //contains
    // $display['display_options']['filters']['title']['operator'] = 'contains';
    $display['display_options']['filters']['title']['expose']['placeholder'] = 'filter by title';
    // dump($display['display_options']['filters']['title']['expose']['placeholder']);
    // exit;
    // dump($view->getDisplay());
  }
}

/**
 * Implements hook_form_alter().
 */
function custom_view_field_form_alter(&$form, &$form_state, $form_id) {
    // Check if this is the form for the view exposed filter.
    if ($form_id == 'views_exposed_form' && isset($form['#id']) && strpos($form['#id'], 'views-exposed-form-my-articles') === 0) {
      // Add placeholder to the title filter.
      if (isset($form['title'])) {
        $form['title']['#attributes']['placeholder'] = t('Filter by title');
      }
    }
}

/**
 * Implements hook_views_query_alter().
 */
function custom_view_field_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'my_articles') {
    $view->query->where[0]['conditions'][] = [
      'field' => 'node_field_data.status',
      'value' => 1,
      'operator' => '=',
    ];
  
    $orderByArray = $view->query->orderby ;
    $newElementOrderBy = ["field" => "node_field_data_body", "direction" => "DESC"]; 
    $orderByArray[] = $newElementOrderBy;
  }

}
